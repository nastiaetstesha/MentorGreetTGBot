import json
import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import CallbackContext


def load_json(filename):
    if os.path.exists(filename):
        with open(filename, "r", encoding="utf-8") as f:
            return json.load(f)
    return []


def shorten_name(name):
    words = name.split()
    return " ".join(words[:2]) + "..." if len(words) > 2 else name


def get_mentors_keyboard(mentors):
    keyboard = [[shorten_name(mentor["name"])] for mentor in mentors]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)


def get_cards_keyboard(cards):
    keyboard = [[card["name"]] for card in cards]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True)


def start(update: Update, context: CallbackContext):
    keyboard = [["üìú –°–ø–∏—Å–æ–∫ –º–µ–Ω—Ç–æ—Ä–æ–≤"]]
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –º–µ–Ω—Ç–æ—Ä–æ–≤.",
                              reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=True))


def show_mentors(update: Update, context: CallbackContext):
    mentors = context.bot_data.get("mentors", [])
    if not mentors:
        update.message.reply_text("–°–ø–∏—Å–æ–∫ –º–µ–Ω—Ç–æ—Ä–æ–≤ –ø—É—Å—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ.")
    else:
        update.message.reply_text("–í—ã–±–µ—Ä–∏ –º–µ–Ω—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞:", reply_markup=get_mentors_keyboard(mentors))


def select_mentor(update: Update, context: CallbackContext):
    mentors = context.bot_data.get("mentors", [])
    if update.message.text in [m["name"] for m in mentors]:
        context.user_data["selected_mentor"] = update.message.text
        update.message.reply_text(f"–¢—ã –≤—ã–±—Ä–∞–ª {update.message.text}. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∫—É:",
                                  reply_markup=get_cards_keyboard(context.bot_data.get("cards", [])))
    else:
        update.message.reply_text("–í—ã–±–µ—Ä–∏ –º–µ–Ω—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.")


def select_card(update: Update, context: CallbackContext):
    cards = context.bot_data.get("cards", [])
    selected_mentor = context.user_data.get("selected_mentor")
    if update.message.text in [c["name"] for c in cards] and selected_mentor:
        selected_card = next(c for c in cards if c["name"] == update.message.text)
        update.message.reply_text(f"–¢—ã –≤—ã–±—Ä–∞–ª –æ—Ç–∫—Ä—ã—Ç–∫—É '{selected_card['name']}' –¥–ª—è {selected_mentor}! {selected_card['body']}",
                                  reply_markup=ReplyKeyboardRemove())
        context.user_data.pop("selected_mentor", None)  # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –º–µ–Ω—Ç–æ—Ä–µ
    else:
        update.message.reply_text("–í—ã–±–µ—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞.")
